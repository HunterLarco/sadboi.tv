#import 'ChatMessage.graphql'
#import 'UserHandleChange.graphql'

type WaitingRoomEvent {
  type: WaitingRoomEventType!
  timestamp: DateTime!
  details: WaitingRoomEventDetails!
}

enum WaitingRoomEventType {
  """
  Indicates that the stream is connected and ready to send payloads. This will
  always be the first message sent by a stream.

  Note that if querying for room history, you should filter for events prior to
  the timestamp of the Ready event to ensure you get all events before you
  connected to the room.
  """
  Ready

  """
  Indicates that a chat message has been sent,
  """
  ChatMessage

  """
  Indicates that a user changed their chat handle (be it name, color, or
  something else that changed).
  """
  UserHandleChange
}

union WaitingRoomEventDetails = ChatMessage | UserHandleChange

scalar DateTime
